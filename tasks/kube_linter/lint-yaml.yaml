apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: lint-yaml
spec:
  description: This task can be used to lint yaml files.
  workspaces:
    - name: source
      description: A workspace that contains fetched git repo.
  params:
    - name: config_file_url
      type: string
      description: url from where the config file would be fetched.
      default: ""
    - name: config_file_path
      type: string
      description: path to config file.
      default: ""
    - name: manifest
      type: string
      description: path to manifest files or manifest directory to be checked.
      default: "."
    - name: includelist
      type: string
      description: "lists comma separated checks to be included"
      default: ""
    - name: excludelist
      type: string
      description: "lists comma separated checks to be excluded"
      default: ""
    - name: default_option
      type: string
      description: "provides two options for adding all built-in checks or disabling default checks: add-all-built-in and/do-not-auto-add-defaults"
      default: ""
    - name: output_format
      type: string
      description: output format
      default: json
    - name : args
      type: array
      description: "args"
      default: []
  steps:
    - name: fetch-config-file
      image: registry.access.redhat.com/ubi8/ubi-minimal:8.2
      workingDir: $(workspaces.source.path)
      script: |
         #!/usr/bin/env bash
         
         if [ ! -z $(params.config_file_url) ]
         then
          curl $(params.config_file_url) --output $(params.config_file_path)
          echo "Fetched the config file from given ($(params.config_file_url)) URL and successfully saved at $(workspaces.source.path)/$(params.config_file_path)"
         else
          echo "No config file url was set"
         fi

    - name: lint-yaml
      image: stackrox/kube-linter:latest-alpine
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/sh
        
        mv ../../kube-linter ../../bin;

       
        if [ ! -z $(params.config_file_path) ]
        then
          kube-linter lint  $(params.manifest) --config $(params.config_file_path) --format $(params.output_format) $*
        else
          if [ ! -z $(params.default_option) ]
          then
            kube-linter lint $(params.manifest) --$(params.default_option) --include "$(params.includelist)" --exclude "$(params.excludelist)" --format $(params.output_format) $*
          else
            kube-linter lint $(params.manifest) --include "$(params.includelist)" --exclude "$(params.excludelist)" --format $(params.output_format) $*
          fi
        fi         
      args:
      - $(params.args)
    